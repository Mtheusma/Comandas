<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACBGAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAGDNJREFUeJztnQe0HkUVx6+AGhEMLXRIaBEITbotAaIizQYoQaRYooIV
        KR7rOygeUCygiCASQUBFDaI0BSVIkKKUIC0CvkgLIB1MIDHq/J33eR7fd2dnts6W/++c/+EcMjtvd3b2
        frt37twrQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGk
        EsYa7WQ03egEox8anW902SjNNPqB0ZeMPmq0u9H6RktVfraEkNxMFPswX2v0L6P/ZNRCoxuMTjY60OiV
        VV4EISQdU42uNPq3ZH/ofXrAaIbRNKNVqrksQkgSk4wukfIeepfwdnGF0UeM1iz9KgkhL2Alo5OMFkv1
        D3+/loh9+3iv0fJlXjQhXWcZo8OMHpX4D76mZ43ONJpc1gAQ0lV2Npoj8R/yUN1p9HGjl5cxGIR0hQ3E
        Lt/FfqCz6gmj443WKHpgCGkz+OUcErskF/shLkLPG51ltHGBY0RI60AQzsFGD0r8h7YMwWl4rjC2gJAB
        tjO6WuI/pFUZgvOMNipk5AhpMGsbnS3lBvLUVYuMTjFaLfcoEtIwXiLWU/60xH8QYwtLiMcZLZdrRAlp
        CPsaDUv8B69uutfo3UYvyj60hNSXrYxmSfwHre5CdOFm2YaYkPqB8N0TJd8uva5p8ciYMcSYNJYXi/3O
        R0BM7AeqqcJOxAPTDjwhsXmD0a0S/wFqiy42WivVHSAkAljb/rXEf2DaKLxJTQ+/FYRUxwpil7Kek/gP
        Stt1kfBtgNSEpcX+Kj0i8R+MLgnboqcF3B9CSmOK0U0S/2HoshBSPNZ3owgpEoTvYndbF8N366hhox0T
        7xghBbCs2G26CyT+pKdeqEUj94ZpzUnhIDQVIar3S/yJTiXrQmHmYlIg2xjNlvgTmwrXfWK3VxOSGaSx
        OlXs3vXYE5pKL2RTOmTgrhLioRe++5TEn8RUfp06ck8J8fJ2o7sl/qSlitXvjcYJIQ6QrBKx5rEnKlWe
        /ma0iRAyihXFbjmtQ5Udqnw9LrZqMuk4qLLD8N1uCinKDxDSWXYxukXiT0QqnhDBOSSkU2xodIHEn3xU
        ffQ9YeRg6+lV2eE2XUrTj4XLhK0E4btIJTVf4k8yqt5C+PDLhLSG7Y3+KPEnFtUczRImIG0864itPcdt
        ulQW4UcDS8OkYeD17WijZyT+JKKarRuFRqBR7CWsskMVK7wJ8HOg5rxKbAWZ2JOFaqeuEruCRGrGysIq
        O1Q1+q3RGCG1ANV0jzB6UuJPDKo7+pXY0HESEVTZuU3iTwaqmzpdSBQmig3SiD0BKOoLQiqjV2UHO7di
        33iKghBbwhRjJYONGQjffVji33CK6hdSj+8qpBR2Npoj8W8yRSUJuSI3E1IYCN9FlZ3YN5aiQjUsdjma
        5KBXZQfpm2PfUIpKK8QIoDAsSQm26e5r9HeJfxMpKo++LCQV2xpdLfFvHEUVIawM4MeMeFhTWE2Xaqee
        NtpIiArCd1llh2q7/ixMKzbAZLHFGGLfHIqqQvQHjOLTwt16VLeE+f46If8L4fUNFpb+LjH6itH+RjuI
        Lc+1tthsLOsbbSl2QFGv7yixGzKw///RgP4pKoaGjcZKh8H3ftIAzTZ6p+TPtoJNQgcbnSbcJUjVSz+Q
        joJfccRKa4Nyh9HuJf7tdY0OFftWwfz/VExhpQv+r06BTTzwhGoD8nOpNrXSckb7GP1SuJuQiiO8lWIF
        rDPsJ/pA4CGMmU1lFaOPGF0n1U4AivqMdAgtug+hvkkOEVjInYw+ZfRDsXX7Zol9k7jcaObI/z/W6D1i
        i33kcbBgBxdqwf1TOVeKKloLjDaQDoCim9oAvMfRHr/K3zR6zHGcT3eKdbQcLNkisLDKgNyCwxn/PkWF
        6mfSAQ6TwQt/UPTIqK2MHlDa59E9Rt8Q+zaRZncW2u4tthBE7IlCtVNwCGL/S6tBddX+C/+u0g7Ve+5W
        2hYpxAicYTRF7K7DENBuT6GfgCpH2Dbcam6WwYt+l9JumtKuTN0nNihpwxTXgnRPsys+T6r92kVaDHZD
        9V/wlkq7s5V2eEX6g9gH9YNig4TwWn6A2E+LzxnNEPvrnLUeAP7GpUa7SfhbwVvFxi7EnjhUO4RSY60E
        6//aFt/VlLZXKO0+lPLvIUQYSUMRFjxX6c8nOBARMLRc4LXhbz2Y4e9QVL9eIy0EAT7axWrLdbcq7d6U
        8+/DIBwu9i0izeajx8XmeV8h4G/AWAwJlw+pfIKvrHXgV3KJDF7sWkrb65V2by/wXFYVG/Rzg/J3XMJn
        xTFGKwX0j2ti8lIqqxaL3ezWOrRkH5OUdpcq7Q4t6Zy2EBtr8A/lb2qCHwP7uV8R0DfKkTPPAZVFX5IW
        Mk8GL3Sq0u5kpV3ZO6deKvY7/hblb2vCMuLRI8clgSVNGAxuPKLS6H4Jd0Q3BoTt9l/oJ5R271Pa3V7R
        OWLQUWD0IgnLS/hXsasRvpuFHAbXBPRHUT29WlrGiTJ4kTOUdlso7aCq46W3FrtJKcQQXGW0uac/+EGm
        C52EVJhOkJbxARm8yNuUdvg1vU9pe2Q1pzkANgfBqedbPYDzBkbO5x/YxOhaT18UNSwt+wzAg6Rd6Hil
        7SlKuznVnKYTvBH8Tvw3Dt9vvhzw2F8AHwJ9A1SSfG+VjQLWTAuW+aDSdqrSDqpDMkVkLNJiFfr1G/F/
        tkwK7Ivqpt4vLeNMGbzIi5R2MBb3KG3PreY0veAXHDfnEUm+gc+KjTlIepVDAJE2LhSFvBStApt/+i8S
        385rKG0/o7TFd/jESs40DEQI4rvf5x/AxiFfTgLkRXjG0w/VLSFYrVWg0q+2KegopS0i9hYobc+o5EzT
        gSxErlyHPeHh/rAkvw3AuDHvANUTkudi9ahVzJDBC8XmG+3B+LbSFoNSxxpr+CzA6/4TknxTLxP9jacH
        god+5OmD6o5WlpaBPc/ahe6htF1H9Iy9Mys502xgh+P5knxTEXrsS3+OIKnFnn6o9uuV0jLwS4/Ivv4L
        /YOj/alKW2hK6Weaj0MkOTcBAoy+KsnFIl9v9FBCH1T71crtwVj60y5WC39cXXTnGDIMxUwlHgLeYLAc
        mHSDERQ0IaEPFDNJs3ORape0/TKNB9+52g68Sxztv6C0hWJFB6YBbzwweFgSdN1k+A32TOgD+RQuSDie
        aq8QgNZKhkS/YC0vGh6AvyttEVe/XgXnWgQIAf6LuG808iV8VtyrBHAynpRwPNVOTZCWgjV0Lec/ltO0
        h2A3pS0E30FTlkrGiL4parR+Jcn7CeAc1JKrUO0T7nOV5fIqB+v/2oXv72g/09Fe21ZcZ94hycuFWBZN
        8v4iQxJ3FbZfsfe/lA5+EbWdf/NFzxeIVEmaZ32h0aYVnG+RIA15UgISvB1NSTh+e8leNYlqhk6WDoCY
        eu3iT3S0P8jRHt/XLyv7ZAsGr3coC+WaAIiBcL0NATiIfPsRqOZqH+kA+H7XsuXg+2d7xzHnKe2hb5V9
        siUAfwe2Bru+6xEvMJRwPLINaW9RVLOF0nhJMSKtYhvRN9Rg/VsbhHGiB8jgYdm1gvMtAxQZ0fZJ9ITX
        QVdNQ6yEaLsnqebqs9IxUCdQG4hjHO2xKqCl67qy9DMtD+QHmCfuSYEUZa5EpGuKzVEYe+JS+YWkMiG1
        KFoFynFrFYERD+/6FPiG0n5e2SdaMniQbxL35EBk4bKOYxF5yFTkzRZ+1N7cf2O7AjYEaYOCZTFt0u+o
        tJ1XxYmWDJKEXCzuSYIkpK5YgQmiB01RzdA3B+5ox0ANAG1gjlDattUAAOxzOE3cEwUBU66tolhivD/h
        WKqeQgagViUCzQJ+2bRfsJ8qbdtsAAAmw9fEPWHwqeAyAggkejjhWKo+wgrQkPDh/z+flMFB+oXSru0G
        oAeWCZOMwIqO47YVphmru+aJLUZDRnGY0AD04wqbhhBH4SpljtUSJhapnxDAhd2sYxz3rdPQAOigSKqr
        UhFqFrgiIQ9JOI6qVnPF7uV4ieNeEaEBSAJ5B12T60JxR499PuE4qjrVJbV9raEBSAa7H10T7BxxO5NY
        fyC+aAACoAHwc6y4J9kXHcfge/O6hOMoGoBaQAMQBirIapMM3/sHO45BSnIt4pKiAagNNABh4FUflYu1
        iYb6Ca7lJdRY1NKtU26hhB0SdG4pdtcpDUCJ0ACEA6cfio1ok+1xsVGBGoc6jqFeqDvELqX2MyNjfzQA
        AdAApAPRk0gfpU04ZB1y5ZX7heMYyqZsQ0Caa1Vl74z90gAEQAOQnrXEnRgEY6etDKxkdK/jmK4KeSkQ
        kz/OM95HZOyfBiAAGoBsbCc2P6I28Q53HDNZ/NWNu6IrxH7j+0Abra4FDUBB0ABkB1F/2sRDOLBWeQkc
        4zimK3p+ZNx8IEkHclAsyvG3aAACoAHIhyu7EpKFaHkE8J17s+OYLsiXSxKp2KZLMQlYaQACoAHIBx5o
        FEzRJuCZjmPw+dDVT4EDEsZyiiRnaKIBKAEagPzAKfio6JNwmuMYLcVaF3SKMhYTJDllOw1AidAAFMPb
        RJ+EWOJaXWmP5cJhxzFtFhJyYH8FtlQjJ+OXjRaU9LdoAAKgASgOLGlpE/EnjvZvcbSnaAAqgwagOJBM
        9XbRJ+MejmMud7SnaAAqgQagWJBWXXPwIfeilkkIDkEmEKEBiAYNQPGcJPqEPNbR/seO9hQNQOnQABQP
        HHxa0RA4u9ZR2q8vzckliPOEgRsvds1+X6lv+XQagABoAMrB5eA73dH+XEf7Oum3Ykuq9XNkDc6NBiAj
        NADloTn44B/QHqJtlbZ10V1iDZqLKTU4RxqAjNAAlAc2smgOwXMc7WcpbWPqKbEp0n1ZdbPu1qMBqAE0
        AOVyhgyOGza4rKu0rUtcAIJ1UDZOC2DSzrmuBVFoAAKgASiX9UR38J2gtEWNwtglxq4X907G0SD70XmR
        z5UGoABoAMrnbBkcO7xea3EBpyhtqxAKnB4o/pp5WOEYMnou0nnSABQMDUD5bC56sM+7lbY7Ke3KFJYm
        jxN3ubMeMAwwEPMrPj8agJKhAagGlBPrH78LlXZLGT2otC1aMEjYo6D5Ivp5rdgS6bEfaBqAEqABqIaD
        ZHD84AzUSo7/VGlbpG4Um57MB7Y5IxV6U0OVaQACoAGoBnw7a97ydyltk8qR5RFyFnxcbARfEih8erTj
        fJskGoAAaACq43wZHMMTlXY7KO3yaNHI3xkbcI57SXvyFNAABEADUB3Ifd8/hn9S2iHwpqiUYb82mhhw
        bluLO7VZU0UDEAANQHXgIesfw4WOtnmTYs4Vdw6C0cAHgbeDNuYopAEIgAagOvAKrk1U7dX8Nkdbn5CC
        DN/vvvBdJDOFP+DJjH+nCaIBCIAGoFq0rbMbKe2uVNr5hGN8VXYAvvP/mqH/pokGIAAagGp5VgbHcVOl
        nRY34NN4z9/exOg3GfptqmgAAqABqAZE2u0v+kRdVWl/o6OtS/9M+Nsriv3Oz1Nlp4miAQiABqAcEESz
        j9j8/9eILYmlTdL5juOzhNzu2NcH1vs/LO6aBW0XDUAANADFgL3/HxM76ZAANHSSanEA66Y4frTwd+H5
        xzZebNO9JWM/bRENQAA0APmANx1r7VkmKH7lNafdgRn7o2gAUkMDkI+DJNvknGO0saPP2Rn7pGgAUkMD
        kI/jJXxCwlF3kdF+Yt8cNCan6I+iAcgNDUA+viruCYhtvfg8QGDO64zGePrCJpy5Cf1RNACFQwOQD80A
        zBT/mnw/iNzL6kugaAAyQwOQD80AfD1lHygWMkvph6IBKB0agHzkMQDLGx0u7Y7HpwGoOTQA+UhrAPCd
        j7V6JP98QjmWogGoFBqAfKQxAO8XPvQ0ADWDBiAfoQbAVR+AogGICg1APkINwN5KO4oGIDo0APkINQD7
        Ke0oGoDo0ADkgwagvqIBCIAGIB80APUVDUAANAD5oAGor2gAAshjAB4Su67dZWgA6isagADyGAAISShQ
        3cZXVbat0ADUVzQAARwqgwP3S6Xdekq70UJRia0rON+6QQNQX9EABDBNBgfudkfbc5S2o7XE6PtGq5V7
        yrWCBqC+ogEIYHvRH+QJSlvsZz9b/NVinzI6QvzFKdoADUB9dbJyH0gfy4i+G+3UhGNgNK5RjunXXUb7
        lnXiNYEGoL76hHIfiAIe9v7BQ9z6lIRj4PRD8sqQ9NWXG21e0rnHhgagnkKtw3WV+0AUJoleHBLLfOM9
        x6Lu/ZDRc8rx/QYFhiakdFWToAGop45T7gFJ4HTRB/I+o9cGHL+h0XmOPkbrMbFFKZcp9vSjQQNQLy0Z
        Gf+llXtAElhB3AUt0nj3p0pYQYo7jHYr9AriQANQH10ng9WRSAq2E714ZU+h3n38uk+XsBr3SIS5QcHX
        USU0APH1gNj6DF0NRiuUNxg9I8kDjtLSewX0tZLY0le+RBiLRtq9osDrqAoagHhaaPQVsYVXSYEgog9L
        eL4bgFLTmwT0hwo4Fwf0hzz6eHNo0vcbDUAcIVx9fcc9IQWwrNHXxF3Vtqfer/eKAX3ireFuT3/Qn8UW
        0mgCNADVCv6lXZx3gxTORlKsd//FI+2e8vT375G/O77QqykeGoBq1LbVo8YB7/5fxH+jQr37a4iNC1ji
        6Q/19LCmW9fvPBqActWLH1kl6SaQauh59/8h/hsX6t3fxuiqgP4Qj4DIw7p5emkAylObI0gbTdHefTzU
        2DMwz9MfdK3RDkVeTE5oAIpXF/aQtAJ49y8R/w3tefeX8vQHx+OQ0QJPf/hsOEvqse2YBqA4IQZlyOil
        vkEn9QLe/XvEf4NDvftri33AfduOEa8wJHEnDA1AfuE+436vHjDepKYgOrBo7z5e9a/19AchMCnWKyMN
        QD4xfLdlpPHuD4k/qSg+G+D8e8jTHwSn0WZFXkwANADZdL/U06lLCgLe/dninwih3n0sAw5J+LbjqpaN
        aADSCf6dOi/rkgJJ492fZbRVQJ9pA5PKDiumAQgXloYnBI8saQ1lePexaSkkMAkJTt9c2JUMQgPg1w1G
        r08zqKSdFO3dR1hxmsCkMjaP0AC49ahU8xZGGsYUo5vEP4FCvfu9wCQtrdloPS/FbzumARhULwBsbMqx
        JB0ijXf/Mgnz7mNr8qUB/YUGJoVAAzB4rzZNPYqksyAVGbzCPu8+flVCvfuhgUl/krB8h0nQAFjdabR7
        hvEj5H9MFPud7ptood79tIFJWVNId90APG50tHSjCAypAHj3bxX/xIN3f9eA/taUdIFJY1Keb1cNQG/F
        ZtWU40WIl17SkCfEPxFDvfvbGl0d0F/abcddNAC/N9oicHwIyUxa7/7ynv56gUmu9OejdYXRlgHn2CUD
        cK9Y40hIpYR695EeOs2244We/kJec7tgAHrbdNN+HhFSKPDu/038Exbe/dcE9LeO2Afc1x8+ReDo0gKT
        2mwA8jpICSmcnnf/aSlu8u5kdLOnP2iu0Z59x7bVAIQaUUKiULR3vxeY9LCnPwjBLpNGjmubAQj9jCKk
        FoR690MdWKhv8C2xgUdJ/eHf8aCfpvxbEw1AqCOVkNpRhnc/NDBJU9MMAK5zvYAxIaTWvFyK8+73CA1M
        aqIBCA2mIqRRpPXu+8JYe4FJTwb02QQDUFWyFEKisrPRHPE/EPDu7xHQ38oSFphUVwOQZkMVIa0gq3c/
        iVcZXZnQz3HKMbENQOi1EdJK4N3Hgxla7TgkmcU7Rc93+EalbSwDEDNlOiG1A979C8X/4ISms0Ja888Z
        DYs1Bh9ztKvaANShaAohtQXe/dvE/yDdaDS5gL9XlQGoU9k0QmpNGu9+3rXyKgzALAlLrU4IGUWod79X
        1CJLtFyZBqCupdMJaRQ+735PiJdP+8CVYQBCy6sRQlKAbcfD4n8Arzd6dWCfRRqANAVWCSEZwK8qogRD
        th2HlLYuygCEllgnhBTAWhJWzciXNSevAejVMmD4LiER2M7oj+J/ULEjUdt2nNUA9AKTiqxmRAjJAJx+
        eLjni//B7c+cm8UAYOlxg5KviRCSEvwaHy/+sOLFRt8xGmc0zdN2tFD1eGplV0MIycSGRheI/4HGct1w
        QDuEHx9mtEyVF0EIyccuRrdIdgcf3hSwTXdc1SdOCCkG/GrDS/+IpHv4f2e0eYTzJYSUALYdw2uPX/Wk
        B/8u4TZdQlrLxmIzBmP/wOgHH+m4jhJu0yWkE6AMGfYYvG3kvyyjTQghhBBCCCGEEEIIIYQQQgghhBBC
        CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCFV8V/yYVbcO5WrcQAAAABJRU5ErkJggg==
</value>
  </data>
</root>